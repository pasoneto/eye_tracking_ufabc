data2 = data.frame(cent = cent2,
distance = log(cent2))
plot(data2)
ggplot(data=data, aes(x = cent, y = log(distance)))+
geom_point()+
geom_text(aes(label=cent),hjust=-1, vjust=0)+
xlab("Cents")+
ylab("Perceived distance")+
xlim(c(0, 2000))+
ylim(c(0, 2000))
ggplot(data=data, aes(x = cent, y = log(distance)))+
geom_point()+
geom_text(aes(label=cent),hjust=-1, vjust=0)+
xlab("Cents")+
ylab("Perceived distance")
ggplot(data=data, aes(x = cent, y = distance))+
geom_point()+
geom_text(aes(label=cent),hjust=-1, vjust=0)+
xlab("Cents")+
ylab("Perceived distance")
x <- c(1, 1, 4, 4)
y <- c(1, 3, 2, 6)
x-mean(x)
x_minus_xmean = x-mean(x)
y_minus_ymean = y-mean(y)
x_minus_xmean = sum(x-mean(x))
y_minus_ymean = sum(y-mean(y))
xy_deviances = sum(x_minus_xmean*y_minus_ymean)
x-mean(x)
x <- c(1, 1, 4, 4)
y <- c(1, 3, 2, 6)
sum(x_minus_xmean*y_minus_ymean)
x <- c(0, 0, 0, 1, 1, 1, 2, 2, 2)
y <- c(0, 4, 5, 4, 5, 6, 5, 6, 10)
sum(x-mean(x))
mean(x)
x
x-mean(x)
sum(abs(x-mean(x)))
x_minus_xmean = sum(abs(x-mean(x)))
y_minus_ymean = sum(abs(y-mean(y)))
sum(abs(y-mean(y)))
x_minus_xmean*y_minus_ymean
sum(x_minus_xmean*y_minus_ymean)
y-mean(y)
x_minus_xmean*y_minus_ymean
x_minus_xmean = sum(abs(x-mean(x)))
y_minus_ymean = sum(abs(y-mean(y)))
x_x = c(x-mean(x))
y_y = c(y-mean(y))
x_x*y_y
sum(x_x*y_y)
sum(abs(x-mean(x)))
sum(abs(y-mean(y)))
sum(x_x*y_y)
sum(abs(x-mean(x)))
xy_deviances / x_minus_xmean
x_x = c(x-mean(x))
y_y = c(y-mean(y))
x_minus_xmean = sum(abs(x-mean(x)))
y_minus_ymean = sum(abs(y-mean(y)))
xy_deviances = sum(x_x*y_y)
xy_deviances
x_minus_xmean
xy_deviances / x_minus_xmean
mean(y)
slope*mean(x)
slope = xy_deviances / x_minus_xmean
intercept = mean(y) - slope*mean(x)
intercept
paste('y = ', intercept,  '+',  slope, 'x')
paste('y =', intercept,  '+',  slope, 'x')
paste('y =', intercept,  '+',  slope, 'x')
paste('y = ', intercept, ' + ', slope, 'x', sep='')
x <- c(1, 1, 4, 4)
y <- c(1, 3, 2, 6)
x_x = c(x-mean(x))
y_y = c(y-mean(y))
x_minus_xmean = sum(abs(x-mean(x)))
y_minus_ymean = sum(abs(y-mean(y)))
xy_deviances = sum(x_x*y_y)
slope = xy_deviances / x_minus_xmean
intercept = mean(y) - slope*mean(x)
intercept
paste('y = ', intercept, ' + ', slope, 'x', sep='')
lm(y~x)
lm(x~y)
lm(y~x)
x <- c(1, 1, 4, 4)
y <- c(1, 3, 2, 6)
x_x = c(x-mean(x))
y_y = c(y-mean(y))
x_minus_xmean = sum(abs(x-mean(x)))
y_minus_ymean = sum(abs(y-mean(y)))
xy_deviances = sum(x_x*y_y)
slope = xy_deviances / x_minus_xmean
intercept = mean(y) - slope*mean(x)
intercept
paste('y = ', intercept, ' + ', slope, 'x', sep='')
lm(y~x)
(kp = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88)
nomes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'))
data.frame(kp = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
nomes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'))
d =
data.frame(kp = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
nomes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'))
d =
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'))
require(ggplot2)
p=
ggplot(d, aes(x = Notes, y = Profiles))+
geom_line()
p
p=
ggplot(d, aes(x = Notes, y = Profiles), groups = 1)+
geom_line()
p
p=
ggplot(d, aes(x = Notes, y = Profiles), group = 1)+
geom_line()
p
p=
ggplot(d, aes(x = Notes, y = Profiles, group = 1))+
geom_line()
p
d =
data.frame(Profiles = c( 6.35, 2.23, 3.48, 2.33, 4.38,
4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'))
require(ggplot2)
p=
ggplot(d, aes(x = Notes, y = Profiles, group = 1))+
geom_line()
p
d =
data.frame(Profiles = c( 6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'))
p=
ggplot(d, aes(x = Notes, y = Profiles, group = 1))+
geom_line()
p
View(d)
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'),
ord = seq(1, 11, 12))
seq(1, 11, 12)
d =
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'),
ord = seq(1, 12, 1))
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()
p
d =
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'),
ord = seq(1, 12, 1),
dia = c(6.35, 0, 3.48, 0, 4.38, 4.09, 0, 5.19, 0, 3.66, 0, 2.88)))
require(ggplot2)
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia))
p
d =
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'),
ord = seq(1, 12, 1),
dia = c(6.35, 0, 3.48, 0, 4.38, 4.09, 0, 5.19, 0, 3.66, 0, 2.88)))
d =
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'),
ord = seq(1, 12, 1),
dia = c(6.35, 0, 3.48, 0, 4.38, 4.09, 0, 5.19, 0, 3.66, 0, 2.88))
require(ggplot2)
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia))
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia))+
ylim = c(0, 7)
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia))+
ylim = c(0, 7)
p
d =
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'),
ord = seq(1, 12, 1),
dia = c(6.35, NA, 3.48, NA, 4.38, 4.09, NA, 5.19, NA, 3.66, NA, 2.88))
require(ggplot2)
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia))
p
d =
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'),
ord = seq(1, 12, 1),
dia = c(6.35, NA, 3.48, NA, 4.38, 4.09, NA, 5.19, NA, 3.66, NA, 2.88))
require(ggplot2)
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia))+
xlab("Notes")
p
d =
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'),
ord = seq(1, 12, 1),
dia = c(6.35, NA, 3.48, NA, 4.38, 4.09, NA, 5.19, NA, 3.66, NA, 2.88))
require(ggplot2)
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), fill = 'white')+
xlab("Notes")
p
d =
data.frame(Profiles = c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88),
Notes = c('c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'),
ord = seq(1, 12, 1),
dia = c(6.35, NA, 3.48, NA, 4.38, 4.09, NA, 5.19, NA, 3.66, NA, 2.88))
require(ggplot2)
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), fill = 'white', size = 2)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia),fill = "white", size = 2)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point()
geom_point(aes(x = reorder(Notes, ord), y = dia)shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia)shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)+
xlab("Notes")
p
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 1, stroke = 5)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 1, stroke = 5)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 1)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 2)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 2, stroke = 2)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), colour = "black", fill = "white", size = 2, stroke = 2)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 2, stroke = 2)+
xlab("Notes")
p
p
ggsave(p, filename = "C:/Users/Lenovo/Desktop/world/Ciência/UFABC/Dissertação/images/fig0.png", dpi = 600,
width = 6, height = 4.5, units = "in")
names <- c()
for(i in 1:10){
name <- paste('participant', i)
names[i] <- name
}
before_coffee = seq(from = 5, to = 50, by = 5) + rnorm(n = 10, mean = 1, sd = 2)
coffee_sim <- data.frame( "Participants" = c(names),
"before_coffee" = before_coffee,
"after_coffee" = before_coffee + rnorm(n = 10, mean = 20, sd = 1)
)
#1) Imagine you are a researcher and you want to measured the speed
#of a pearson running before and after a cup of coffee. Here's your data set. Take a look at it
#compare the differences in both within subject (row to row),
#and within conditions (column to column):
coffee_sim
) Calculate the descriptive statistics that we learned in our previous exercises
mean(coffee_sim$before_coffee)
mean(coffee_sim$after_coffee)
sd(coffee_sim$before_coffee)
sd(coffee_sim$after_coffee)
#4) Calculate the difference in scores between conditions:
dif <- mean(coffee_sim$before_coffee - coffee_sim$after_coffee)
#5) Calculate the standard error of the mean of the differences
se_mean <- sd(coffee_sim$before_coffee - coffee_sim$after_coffee)/sqrt(length(coffee_sim$before_coffee))
#6) Now divide the difference you found between samples with the S.E.
dif/se_mean
#7) Now compute a paired samples t-test using r's native function. Compare the t-statistic
#with the result from question 6
t.test(coffee_sim$before_coffee,
coffee_sim$after_coffee,
paired = TRUE)[["statistic"]][["t"]]
coffee_sim$before_coffee - coffee_sim$after_coffee
t.test(coffee_sim$after_coffee,
coffee_sim$before_coffee,
paired = FALSE)[["statistic"]][["t"]]
#4) Calculate the difference in scores between conditions:
dif <- mean(coffee_sim$before_coffee - coffee_sim$after_coffee)
#5) Calculate the standard error of the mean of the differences
se_mean <- sd(coffee_sim$before_coffee - coffee_sim$after_coffee)/sqrt(length(coffee_sim$before_coffee))
#6) Now divide the difference you found between samples with the S.E.
dif/se_mean
#7) Now compute a paired samples t-test using r's native function. Compare the t-statistic
#with the result from question 6
t.test(coffee_sim$before_coffee,
coffee_sim$after_coffee,
paired = TRUE)[["statistic"]][["t"]]
t.test(coffee_sim$after_coffee,
coffee_sim$before_coffee,
paired = TRUE)[["statistic"]][["t"]]
qnorm(0.25,mean=385,sd=110)
qnorm(0.25,mean=385,sd=110)
pnormGC(310.80, region="below", mean=385,
sd=110,graph=TRUE)
install.packages('pnormGC')
qnorm(0.25,mean=385,sd=110)
qnorm(0.1,mean=385,sd=110)
names <- c()
for(i in 1:10){
name <- paste('participant', i)
names[i] <- name
}
before_coffee = seq(from = 5, to = 50, by = 5) + rnorm(n = 10, mean = 1, sd = 2)
coffee_sim <- data.frame( "Participants" = c(names),
"before_coffee" = before_coffee,
"after_coffee" = before_coffee + rnorm(n = 10, mean = 20, sd = 1)
)
dif/se_mean
library(readxl)
library(ggplot2)
library(dplyr)
library(stringr)
library(data.table)
#sets the directory to where your file is
setwd('C:/Users/Lenovo/Documents/GitHub/eye_tracking_ufabc')
#Reads data
data =
fread('babies_rawdata.csv')
data$anchor_time <- 0 #creates empty vectors for anchor
data$correction_time <- 0 #creates empty vectors for new timing
#Separates data into 1 data frame for each participant and trial
criancas =
split(data,
list(data$RECORDING_SESSION_LABEL,
data$TRIAL_LABEL))
for(i in 1:length(criancas)){ #for each trial from each participant
#gets the index where condition is met (video_clip == video_name_end)
inicio = match(unique(criancas[[i]]$video_clip),
criancas[[i]]$VIDEO_NAME_END)
#some trials are empty, so we don't do anything with them
if(nrow(criancas[[i]]) != 0){
#some trials never meet our criteria (video_clip == video_name_end)
#so we skip them
if(is.na(inicio) == FALSE){
#now we finally perform the operation:
#latencia is the time (ms) where video_clip == video_name_end
latencia = criancas[[i]]$CURRENT_FIX_START[inicio]
#we save it in a separate column, called correction_time
criancas[[i]][["correction_time"]] = latencia
#now we subtract the original time (current_fix_start) with
#the time where things begin (video_clip == video_name_end).
#initial time will always be 0, and previous will be negative
criancas[[i]]$anchor_time <- criancas[[i]][["CURRENT_FIX_START"]] - latencia
}
}
}
View(criancas)
#Reunites data frame
criancas =
dplyr::bind_rows(criancas)
#Reorders data frame based on participant's name
criancas = criancas[order(criancas$RECORDING_SESSION_LABEL, criancas$TRIAL_INDEX),]
#################
## SECOND TASK ##
#################
data =
read_excel('babies_times.xlsx')
data$CRUZ_START
data$CRUZ_END
data$CRUZ_START <- c(3750, 3071, "baseline", 3740, 4237, "baseline", 3740, 3071, 3740, 3872, 3741, 3872, 4240, 3740, "baseline")
data$CRUZ_END <- c(4250, 3571, "baseline", 4240, 4737, "baseline", 4240, 3571, 4240, 4372, 4241, 4372, 4740, 4240,  "baseline")
#Retirando .avi para ficar igual ao documento babies_times.xlsx
criancas$video_clip <-
str_replace(criancas$video_clip,".avi","")
#Adding info from babies_times.xlsx
criancas =
merge(criancas, data, by.x = "video_clip", by.y = "...1", all = F)
#Reorder
criancas =
criancas[order(criancas$RECORDING_SESSION_LABEL, criancas$TRIAL_INDEX),]
for(i in 1:nrow(criancas)){
if(criancas$CRUZ_START[[i]] != 'baseline'){
if(criancas$anchor_time[[i]] < criancas$CRUZ_START[[i]]){
criancas$parte_trial[[i]] = 'pre_cruz'
}
if( (criancas$anchor_time[[i]] > criancas$CRUZ_START[[i]]) && (criancas$anchor_time[[i]] < criancas$CRUZ_END[[i]]) ){
criancas$parte_trial[[i]] = 'cruz'
}
if(criancas$anchor_time[[i]] > criancas$CRUZ_END[[i]]){
criancas$parte_trial[[i]] = 'pos_cruz'
}
}
}
View(criancas)
criancas$parte_trial <- 0
View(criancas)
for(i in 1:nrow(criancas)){
if(criancas$CRUZ_START[[i]] != 'baseline'){
if(criancas$anchor_time[[i]] < criancas$CRUZ_START[[i]]){
criancas$parte_trial[[i]] = 'pre_cruz'
}
if( (criancas$anchor_time[[i]] > criancas$CRUZ_START[[i]]) && (criancas$anchor_time[[i]] < criancas$CRUZ_END[[i]]) ){
criancas$parte_trial[[i]] = 'cruz'
}
if(criancas$anchor_time[[i]] > criancas$CRUZ_END[[i]]){
criancas$parte_trial[[i]] = 'pos_cruz'
}
}
}
View(criancas)
i = 25
criancas$anchor_time[[i]] < criancas$CRUZ_START[[i]]
criancas$anchor_time[[i]]
criancas$CRUZ_START[[i]]
as.numeric(criancas$CRUZ_START[[i]])
criancas$anchor_time[[i]] < as.numeric(criancas$CRUZ_START[[i]])
criancas$anchor_time[[i]] > as.numeric(criancas$CRUZ_START[[i]])
criancas$anchor_time[[i]] < as.numeric(criancas$CRUZ_START[[i]])
criancas$parte_trial <- 0
for(i in 1:nrow(criancas)){
if(criancas$CRUZ_START[[i]] != 'baseline'){
if(criancas$anchor_time[[i]] < as.numeric(criancas$CRUZ_START[[i]])){
criancas$parte_trial[[i]] = 'pre_cruz'
}
if( (criancas$anchor_time[[i]] > as.numeric(criancas$CRUZ_START[[i]])) && (criancas$anchor_time[[i]] < as.numeric(criancas$CRUZ_END[[i]])) ){
criancas$parte_trial[[i]] = 'cruz'
}
if(criancas$anchor_time[[i]] > as.numeric(criancas$CRUZ_END[[i]])){
criancas$parte_trial[[i]] = 'pos_cruz'
}
}
}
View(criancas)
criancas$parte_trial <- 'baseline'
for(i in 1:nrow(criancas)){
if(criancas$CRUZ_START[[i]] != 'baseline'){
if(criancas$anchor_time[[i]] < as.numeric(criancas$CRUZ_START[[i]])){
criancas$parte_trial[[i]] = 'pre_cruz'
}
if( (criancas$anchor_time[[i]] > as.numeric(criancas$CRUZ_START[[i]])) && (criancas$anchor_time[[i]] < as.numeric(criancas$CRUZ_END[[i]])) ){
criancas$parte_trial[[i]] = 'cruz'
}
if(criancas$anchor_time[[i]] > as.numeric(criancas$CRUZ_END[[i]])){
criancas$parte_trial[[i]] = 'pos_cruz'
}
}
}
table(criancas$parte_trial)
#writes the file to the current directory in your pc
write.csv(criancas, "dados_tratados2.csv")
#writes the file to the current directory in your pc
write.csv(criancas, "dados_tratados2.csv")
