p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia),fill = "white", size = 2)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point()
geom_point(aes(x = reorder(Notes, ord), y = dia)shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia)shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)+
xlab("Notes")
p
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 1, stroke = 5)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 1, stroke = 5)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 1)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 2)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 2, stroke = 2)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), colour = "black", fill = "white", size = 2, stroke = 2)+
xlab("Notes")
p
p=
ggplot(d, aes(x = reorder(Notes, ord), y = Profiles, group = 1))+
geom_line()+
geom_point(aes(x = reorder(Notes, ord), y = dia), shape = 21, colour = "black", fill = "white", size = 2, stroke = 2)+
xlab("Notes")
p
p
ggsave(p, filename = "C:/Users/Lenovo/Desktop/world/Ciência/UFABC/Dissertação/images/fig0.png", dpi = 600,
width = 6, height = 4.5, units = "in")
names <- c()
for(i in 1:10){
name <- paste('participant', i)
names[i] <- name
}
before_coffee = seq(from = 5, to = 50, by = 5) + rnorm(n = 10, mean = 1, sd = 2)
coffee_sim <- data.frame( "Participants" = c(names),
"before_coffee" = before_coffee,
"after_coffee" = before_coffee + rnorm(n = 10, mean = 20, sd = 1)
)
#1) Imagine you are a researcher and you want to measured the speed
#of a pearson running before and after a cup of coffee. Here's your data set. Take a look at it
#compare the differences in both within subject (row to row),
#and within conditions (column to column):
coffee_sim
) Calculate the descriptive statistics that we learned in our previous exercises
mean(coffee_sim$before_coffee)
mean(coffee_sim$after_coffee)
sd(coffee_sim$before_coffee)
sd(coffee_sim$after_coffee)
#4) Calculate the difference in scores between conditions:
dif <- mean(coffee_sim$before_coffee - coffee_sim$after_coffee)
#5) Calculate the standard error of the mean of the differences
se_mean <- sd(coffee_sim$before_coffee - coffee_sim$after_coffee)/sqrt(length(coffee_sim$before_coffee))
#6) Now divide the difference you found between samples with the S.E.
dif/se_mean
#7) Now compute a paired samples t-test using r's native function. Compare the t-statistic
#with the result from question 6
t.test(coffee_sim$before_coffee,
coffee_sim$after_coffee,
paired = TRUE)[["statistic"]][["t"]]
coffee_sim$before_coffee - coffee_sim$after_coffee
t.test(coffee_sim$after_coffee,
coffee_sim$before_coffee,
paired = FALSE)[["statistic"]][["t"]]
#4) Calculate the difference in scores between conditions:
dif <- mean(coffee_sim$before_coffee - coffee_sim$after_coffee)
#5) Calculate the standard error of the mean of the differences
se_mean <- sd(coffee_sim$before_coffee - coffee_sim$after_coffee)/sqrt(length(coffee_sim$before_coffee))
#6) Now divide the difference you found between samples with the S.E.
dif/se_mean
#7) Now compute a paired samples t-test using r's native function. Compare the t-statistic
#with the result from question 6
t.test(coffee_sim$before_coffee,
coffee_sim$after_coffee,
paired = TRUE)[["statistic"]][["t"]]
t.test(coffee_sim$after_coffee,
coffee_sim$before_coffee,
paired = TRUE)[["statistic"]][["t"]]
qnorm(0.25,mean=385,sd=110)
qnorm(0.25,mean=385,sd=110)
pnormGC(310.80, region="below", mean=385,
sd=110,graph=TRUE)
install.packages('pnormGC')
qnorm(0.25,mean=385,sd=110)
qnorm(0.1,mean=385,sd=110)
names <- c()
for(i in 1:10){
name <- paste('participant', i)
names[i] <- name
}
before_coffee = seq(from = 5, to = 50, by = 5) + rnorm(n = 10, mean = 1, sd = 2)
coffee_sim <- data.frame( "Participants" = c(names),
"before_coffee" = before_coffee,
"after_coffee" = before_coffee + rnorm(n = 10, mean = 20, sd = 1)
)
dif/se_mean
library(ggplot2)
library(dplyr)
library(data.table)
#sets the directory to where your file is
setwd('C:/Users/Lenovo/Documents/GitHub/eye_tracking_ufabc/data')
#######################################
## RETRIEVING INFO FROM RAW DATA SET ##
#######################################
alternancia =
fread("alternancia.csv")[, 2: ncol(fread("alternancia.csv"))]
#####################
## score transicao ##
#####################
alternancia =
alternancia[, alternancia_rja :=
(fundo_frente - fundo_errado) / (fundo_frente + fundo_errado),
by = c('crianca', 'video')
]
alternancia =
alternancia[, alternancia_ija :=
(frente_fundo - errado_fundo) / (frente_fundo + errado_fundo),
by = c('crianca', 'video')
]
data =
fread('alternancia_alterado.csv')[, 2:ncol(fread('alternancia_alterado.csv'))]
library(stringr)
data$`pre/pos` <- str_replace_all(data$`pre/pos`, "-", '0')
condicoes =
data.frame(condicao = c('ija', 'ija', 'ija', 'ija', 'ija', 'ija', 'rja', 'rja', 'rja', 'rja', 'rja', 'rja'),
video = c('B2', 'B5', 'D2', 'D5', 'A2', 'A6', 'B6', 'B7', 'D1', 'D4', 'A1', 'A4')
)
data =
merge(data, condicoes,
by.x =c("video"), by.y = c("video"),
all = T)
View(data)
write.csv(data, 'alternancia.csv')
library(ggplot2)
library(dplyr)
library(data.table)
#sets the directory to where your file is
setwd('C:/Users/Lenovo/Documents/GitHub/eye_tracking_ufabc/data')
alternancia =
fread("alternancia.csv"
)
View(alternancia)
alternancia =
fread("alternancia.csv")[, 2: ncol(fread("alternancia.csv"))]
library(ggplot2)
library(dplyr)
library(data.table)
#sets the directory to where your file is
setwd('C:/Users/Lenovo/Documents/GitHub/eye_tracking_ufabc/data')
##############
## NEW TASK ##
##############
alternancia =
fread("alternancia.csv")[, 2: ncol(fread("alternancia.csv"))]
data =
filter(data,
data$dado_bom == 1
)
#sets the directory to where your file is
setwd('C:/Users/Lenovo/Documents/GitHub/eye_tracking_ufabc/data')
##############
## NEW TASK ##
##############
alternancia =
fread("alternancia.csv")[, 2: ncol(fread("alternancia.csv"))]
data =
filter(data,
data$dado_bom == 1
)
data =
dplyr::filter(data,
data$dado_bom == 1
)
data =
fread("alternancia.csv")[, 2: ncol(fread("alternancia.csv"))]
data =
filter(data,
data$dado_bom == 1
)
library(ggplot2)
library(dplyr)
library(data.table)
#sets the directory to where your file is
setwd('C:/Users/Lenovo/Documents/GitHub/eye_tracking_ufabc/data')
##############
## NEW TASK ##
##############
data =
fread("alternancia.csv")[, 2: ncol(fread("alternancia.csv"))]
data =
filter(data,
data$dado_bom == 1
)
library(ggplot2)
library(dplyr)
library(data.table)
#sets the directory to where your file is
setwd('C:/Users/Lenovo/Documents/GitHub/eye_tracking_ufabc/data')
##############
## NEW TASK ##
##############
data =
fread("alternancia.csv")[, 2: ncol(fread("alternancia.csv"))]
data =
filter(data,
data$dado_bom == 1
)
```{r setup3, echo=TRUE}
descritivas <- plyr::ddply(data, c('condicao', '`SessÌ£o`', '`pre/pos`'), summarise,
olhou_frente_mean = mean(olhou_frente, na.rm = T),
olhou_frente_sum = sum(olhou_frente),
tentativas_frente = length(olhou_frente),
olhou_errado_mean = mean(olhou_errado, na.rm = T),
olhou_errado_sum = sum(olhou_errado),
tentativas_errado = length(olhou_errado)
)
View(descritivas)
#MUDE O DIRETORIO PARA ONDE VOCÊ SALVOU O ARQUIVO
setwd('C:/Users/Lenovo/Documents/GitHub/eye_tracking_ufabc/data')
data =
fread("alternancia.csv")[, 2: ncol(fread("alternancia.csv"))]
data =
filter(data,
data$dado_bom == 1
)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d
View(d)
d <- melt(d, id.measures = c("condicao", '`pre/pos`'))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T)
)
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(d, id.measures = c("condicao", '`pre/pos`'))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(d, id.measures = c("condicao"))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(d, id.vars = c("condicao"))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(d, id.vars = c("condicao", '`pre/pos`'))
d <- melt(d, id.vars = c("condicao", '`pre/pos`'))
View(d)
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(d, id.vars = c("condicao", '`pre/pos`'))
View(d)
d <- melt(d, id.measures = c("condicao", '`pre/pos`'))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(d, measure.vars = c("condicao", '`pre/pos`'))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(d, id.vars = c("condicao", '`pre/pos`'), measure.vars = c("frente_errado", "errado_frente"))
View(d)
d <- melt(data = d, id.vars = c("condicao", '`pre/pos`'), measure.vars = c("frente_errado", "errado_frente"))
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, measure.vars = c("condicao", '`pre/pos`'), id.vars = c("frente_errado", "errado_frente"))
d <- melt(data = d)
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, id.vars = c("frente_errado", "errado_frente"))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, measures.vars = c("frente_errado", "errado_frente"))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, measures.vars = c('condicao', '`pre/pos`'))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, id.vars = "condicao", measure.vars = c("`pre/pos`"))
melt(data = d, id.vars = "condicao", measure.vars = c("`pre/pos`"))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, id.vars = "condicao", measure.vars = c("errado_frente", "frente_errado"))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, id.vars = c("condicao", "`pre/pos`"), measure.vars = c("errado_frente", "frente_errado"))
View(d)
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, id.vars = c("condicao"), measure.vars = c("errado_frente", "frente_errado", "`pre/pos`"))
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, id.vars = c("`pre/pos`"), measure.vars = c("errado_frente", "frente_errado"))
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, id.vars = c("condicao", "`pre/pos`"), measure.vars = c("errado_frente", "frente_errado"))
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, measure.vars = c("errado_frente", "frente_errado"))
View(d)
View(d)
ggplot(d, aes(x = `pre/pos`, y = value, colour = condicao))+
geom_point()
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, colour = condicao))+
geom_point()
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, colour = condicao))+
geom_bar(stat = "identity")
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity")
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
ggplot(d, aes(x = condicao, y = value, fill = as.factor(`pre/pos`)))+
geom_bar(stat = "identity", position = "dodge")
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d <- melt(data = d, measure.vars = c("frente_errado", "errado_frente"))
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
ggplot(d, aes(x = condicao, y = value, fill = as.factor(`pre/pos`)))+
geom_bar(stat = "identity", position = "dodge")
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
fundo_frente = mean(fundo_frente, na.rm = T),
frente_fundo = mean(frente_fundo, na.rm = T)
)
d <- melt(data = d, measure.vars = c("fundo_frente", "frente_fundo"))
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
olhou_errado_mean = mean(olhou_errado, na.rm = T),
olhou_errado_sum = sum(olhou_errado),
n_errado = length(olhou_errado)
)
d
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
olhou_errado_mean = mean(olhou_errado, na.rm = T)
)
d <- melt(data = d, measure.vars = c("olhou_errado_mean"))
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
olhou_frente_mean = mean(olhou_frente, na.rm = T),
olhou_frente_sum = sum(olhou_frente),
n_frente = length(olhou_frente)
)
d
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
olhou_frente_mean = mean(olhou_frente, na.rm = T)
)
d <- melt(data = d, measure.vars = c("olhou_frente_mean"))
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
olhou_frente_mean = mean(olhou_frente, na.rm = T),
olhou_frente_sum = sum(olhou_frente),
n_frente = length(olhou_frente)
)
d
d <- plyr::ddply(filter(data, !is.na(data$longitudinal)), c('condicao', '`pre/pos`'), summarise,
olhou_frente_mean = mean(olhou_frente, na.rm = T)
)
d <- melt(data = d, measure.vars = c("olhou_frente_mean"))
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
d <- plyr::ddply(data, c('condicao', '`SessÌ£o`', '`pre/pos`'), summarise,
frente_errado = mean(frente_errado, na.rm = T),
errado_frente = mean(errado_frente, na.rm = T)
)
d[order(d$`SessÌ£o`),]
d <- melt(data = d, measure.vars = c("frente_errado", "errado_frente"))
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
d <- plyr::ddply(data, c('condicao', '`SessÌ£o`', '`pre/pos`'), summarise,
fundo_frente = mean(fundo_frente, na.rm = T),
frente_fundo = mean(frente_fundo, na.rm = T)
)
d[order(d$`SessÌ£o`),]
d <- melt(data = d, measure.vars = c("fundo_frente", "frente_fundo"))
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
d <- plyr::ddply(data, c('condicao', '`SessÌ£o`', '`pre/pos`'), summarise,
olhou_errado_mean = mean(olhou_errado, na.rm = T),
olhou_errado_sum = sum(olhou_errado),
n_errado = length(olhou_errado)
)
d[order(d$`SessÌ£o`),]
d <- plyr::ddply(data, c('condicao', '`SessÌ£o`', '`pre/pos`'), summarise,
olhou_errado_mean = mean(olhou_errado, na.rm = T)
)
d <- melt(data = d, measure.vars = c("olhou_errado_mean"))
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
d <- plyr::ddply(data, c('condicao', '`SessÌ£o`', '`pre/pos`'), summarise,
olhou_frente_mean = mean(olhou_frente, na.rm = T),
olhou_frente_sum = sum(olhou_frente),
n_frente = length(olhou_frente)
)
d[order(d$`SessÌ£o`),]
d <- plyr::ddply(data, c('condicao', '`SessÌ£o`', '`pre/pos`'), summarise,
olhou_frente_mean = mean(olhou_frente, na.rm = T)
)
d <- melt(data = d, measure.vars = c("olhou_frente_mean"))
ggplot(d, aes(x = as.factor(`pre/pos`), y = value, fill = condicao))+
geom_bar(stat = "identity", position = "dodge")
